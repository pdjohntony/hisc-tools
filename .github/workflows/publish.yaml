name: 'publish'

on:
  push:
    branches:
      - release

# This workflow will trigger on each push to the `release` branch to create or update a GitHub release, build your app, and upload the artifacts to the release.

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          #   - platform: 'macos-latest' # for Arm based macs (M1 and above).
          #     args: '--target aarch64-apple-darwin'
          #   - platform: 'macos-latest' # for Intel based macs.
          #     args: '--target x86_64-apple-darwin'
          #   - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
          #     args: ''
          - platform: 'windows-2025'
            args: '--bundles msi --verbose--bundles msi --verbose'

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'pnpm'

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: install frontend dependencies
        run: pnpm install

      - name: install code signing dependencies
        if: matrix.platform == 'windows-2025'
        run: |
          winget install -e --id Microsoft.Azure.TrustedSigningClientTools --silent --accept-package-agreements --accept-source-agreements
          & "$env:LOCALAPPDATA\Microsoft\MicrosoftTrustedSigningClientTools\winsdksetup.exe" /features OptionId.SigningTools /q /norestart
          $outputPath = "$env:LOCALAPPDATA\trusted-signing-cli.exe"
          Invoke-WebRequest -Uri "https://github.com/Levminer/trusted-signing-cli/releases/download/0.5.0/trusted-signing-cli.exe" -OutFile $outputPath
          $trustedSigningDir = "$env:USERPROFILE\AppData\Local"
          Add-Content -Path $env:GITHUB_PATH -Value $trustedSigningDir

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
          AZURE_TRUST_SIGN_ACCOUNT: ${{ secrets.AZURE_TRUST_SIGN_ACCOUNT }}
          AZURE_TRUST_SIGN_ENDPOINT: ${{ secrets.AZURE_TRUST_SIGN_ENDPOINT }}
          AZURE_TRUST_SIGN_PROFILE: ${{ secrets.AZURE_TRUST_SIGN_PROFILE }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          SIGNTOOL_PATH: C:\Program Files (x86)\Windows Kits\10\bin\10.0.22621.0\x64\signtool.exe
        with:
          tagName: v__VERSION__
          releaseName: 'v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
